<?php

/**
 * Checkout_Model_Base_Order
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $increment_id
 * @property string $method
 * @property string $billing_name
 * @property string $billing_address
 * @property string $billing_city
 * @property string $billing_state
 * @property string $billing_zip
 * @property string $billing_phone
 * @property string $card_type
 * @property string $card_number
 * @property date $card_exp
 * @property string $card_csc
 * @property string $shipping_name
 * @property string $shipping_address
 * @property string $shipping_city
 * @property string $shipping_state
 * @property string $shipping_zip
 * @property string $shipping_phone
 * @property int $reviewed
 * @property blob $cart
 * @property decimal $sub_total
 * @property decimal $shipping
 * @property decimal $tax
 * @property decimal $grand_total
 * @property tinyint $status
 * @property integer $user_id
 * @property varchar $session_id
 * @property datetime $date_created
 * @property datetime $date_updated
 * @property Default_Model_User $User
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Checkout_Model_Base_Order extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('checkout__model__order');
        $this->hasColumn('increment_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('method', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('billing_name', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('billing_address', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('billing_city', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('billing_state', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('billing_zip', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('billing_phone', 'string', 11, array(
             'type' => 'string',
             'length' => '11',
             ));
        $this->hasColumn('card_type', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('card_number', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('card_exp', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('card_csc', 'string', 3, array(
             'type' => 'string',
             'length' => '3',
             ));
        $this->hasColumn('shipping_name', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('shipping_address', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('shipping_city', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('shipping_state', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('shipping_zip', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('shipping_phone', 'string', 11, array(
             'type' => 'string',
             'length' => '11',
             ));
        $this->hasColumn('reviewed', 'int', 1, array(
             'type' => 'int',
             'length' => '1',
             ));
        $this->hasColumn('cart', 'blob', null, array(
             'type' => 'blob',
             ));
        $this->hasColumn('sub_total', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '12',
             ));
        $this->hasColumn('shipping', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '12',
             ));
        $this->hasColumn('tax', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '12',
             ));
        $this->hasColumn('grand_total', 'decimal', 12, array(
             'type' => 'decimal',
             'scale' => 2,
             'unsigned' => true,
             'length' => '12',
             ));
        $this->hasColumn('status', 'tinyint', 1, array(
             'type' => 'tinyint',
             'unsigned' => true,
             'length' => '1',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('session_id', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => '255',
             ));
        $this->hasColumn('date_created', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('date_updated', 'datetime', null, array(
             'type' => 'datetime',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Default_Model_User as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}